Index: static/firstPage.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>Vue.component('firstpage', {\r\n\tdata: function(){\r\n    \t\treturn{\r\n    \t\t\tuser: null,\r\n    \t\t\tusers : [],\r\n    \t\t\tshowCreate: 0,\r\n    \t\t\tshowAllCerts: 0,\r\n    \t\t\tcertificate: {\r\n    \t\t\t    type: \"\",\r\n    \t\t\t    receiver: \"\",\r\n    \t\t\t    validFrom: \"\",\r\n    \t\t\t    validTo: \"\",\r\n    \t\t\t    purpose: \"\",\r\n    \t\t\t    path: \"\",\r\n    \t\t\t    key: \"\",\r\n    \t\t\t    signature: \"\",\r\n    \t\t\t    keyUsage: \"\"\r\n    \t\t\t},\r\n    \t\t\tpassword: \"\",\r\n    \t\t\tcertificates: []\r\n    \t\t}\r\n    \t},\r\n    template: `\r\n    \t <div>\r\n    \t      <div style=\"margin-left: auto; margin-right:auto; width:30%;\">\r\n    \t        <input type=\"button\" value=\"Sign out\" @click=\"signOut\"/>\r\n    \t        <input type=\"button\" value=\"Create certificate\" @click=\"showCreateFun\"/>\r\n    \t        <input type=\"button\" value=\"Create self-signed certificate\" @click=\"createSSCert\"/>\r\n    \t        <input type=\"button\" value=\"Show all certificates\" @click=\"showAllCertsFun\"/>\r\n    \t      </div>\r\n              <div style=\"margin-left: auto; margin-right:auto; width:30%;\" v-show=\"showCreate != 0\">\r\n                <p>KREIRAJ</p>\r\n                <table>\r\n                \t\t\t\t\t</br>\r\n                \t\t\t\t\t<tr>\r\n                \t\t\t   \t\t\t<th colSpan=\"3\" text-align=\"center\" class=\"header\">Certificate data</th>\r\n                \t\t\t   \t\t</tr>\r\n                \t\t\t   \t\t<br/>\r\n                \t\t\t\t\t<tr >\r\n                \t\t\t\t\t\t<td>Certificate issued by: </td>\r\n                \t\t\t\t\t\t<td> <input type=\"text\" disabled=\"true\"  v-model=\"user.email\"> </input> </td>\r\n                \t\t\t\t\t</tr>\r\n                \t\t\t\t\t<br/>\r\n                \t\t\t\t\t<tr>\r\n                \t\t\t\t\t\t<td>Certificate issued to:</td>\r\n                \t\t\t\t\t\t<td>\r\n                \t\t\t\t\t\t    <select v-model=\"certificate.receiver\" style=\"width:100%;\">\r\n                \t\t\t\t\t\t        <option v-for=\"us in users\" :value=\"us.email\">\r\n                \t\t\t\t\t\t            {{us.email}}\r\n                \t\t\t\t\t\t        </option>\r\n                \t\t\t\t\t\t    </select>\r\n                \t\t\t\t\t\t</td>\r\n                \t\t\t\t\t</tr>\r\n                \t\t\t\t\t<br/>\r\n                \t\t\t\t\t<tr>\r\n                \t\t\t\t\t\t<td>Valid from:</td>\r\n                \t\t\t\t\t\t<td><input style=\"width:97%;\" v-model=\"certificate.validFrom\" type=\"date\"></input></td>\r\n                \t\t\t\t\t</tr>\r\n                \t\t\t\t\t<br/>\r\n                \t\t\t\t\t<tr>\r\n                \t\t\t\t\t\t<td>Valid to:</td>\r\n                \t\t\t\t\t\t<td><input style=\"width:97%;\" v-model=\"certificate.validTo\" type=\"date\"></input></td>\r\n                \t\t\t\t\t</tr>\r\n                \t\t\t\t\t<br/>\r\n                \t\t\t\t\t<tr>\r\n                \t\t\t\t\t\t<td>Certificate purpose: </td>\r\n                \t\t\t\t\t\t<td><input type=\"text\" v-model=\"certificate.purpose\" placeholder=\"neki tekst\"></input></td>\r\n                \t\t\t\t\t</tr>\r\n                \t\t\t\t\t<br/>\r\n                \t\t\t\t\t<tr>\r\n                                        <td>Certificate status: </td>\r\n                                        <td><input type=\"text\" disabled=\"true\"  value=\"OK\"></input></td>\r\n                                    </tr>\r\n                                    <br/>\r\n                                    <tr>\r\n                                         <td>Certificate type: </td>\r\n                                         <td>\r\n                                           <select v-model=\"certificate.type\" style=\"width:100%\">\r\n                                                <option style=\"display:none;\">-----</option>\r\n                                                <option value=\"ROOT\">Root</option>\r\n                                                <option value=\"INTERMEDIATE\">Intermediate</option>\r\n                                                <option value=\"END\">End entity</option>\r\n                                           </select>\r\n                                         </td>\r\n                                    </tr>\r\n                                    <tr v-if=\"certificate.type != 'ROOT' && certificate.type != ''\">\r\n                                        <td>Certification path: </td>\r\n                                        <td>\r\n                                            <select v-model=\"certificate.path\"/>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <br/>\r\n                                    <tr>\r\n                                        <td>Public key: </td>\r\n                                        <td><input type=\"text\" v-model=\"certificate.key\" ></input></td>\r\n                                    </tr>\r\n                                    <br/>\r\n                                    <tr>\r\n                                        <td>Revocation status: </td>\r\n                                        <td><input type=\"text\" disabled=\"true\"  value=\"OK\"></input></td>\r\n                                    </tr>\r\n                                    <br/>\r\n                                    <tr>\r\n                                        <td>Key usage:</td>\r\n                                        <td>\r\n                                            <select v-model=\"certificate.keyUsage\">\r\n                                                <option value=\"CRL_SIGN\">CRL_SIGN</option>\r\n                                                <option value=\"DATA_ENCIPHERMENT\">DATA_ENCIPHERMENT</option>\r\n                                                <option value=\"DECIPHER_ONLY\">DECIPHER_ONLY</option>\r\n                                                <option value=\"DIGITAL_SIGNATURE\">DIGITAL_SIGNATURE</option>\r\n                                                <option value=\"ENCIPHER_ONLY\">ENCIPHER_ONLY</option>\r\n                                                <option value=\"KEY_AGREEMENT\">KEY_AGREEMENT</option>\r\n                                                <option value=\"KEY_CERT_SIGN\">KEY_CERT_SIGN</option>\r\n                                                <option value=\"NON_REPUDIATION\">NON_REPUDIATION</option>\r\n                                            </select>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <br/>\r\n                                    <tr>\r\n                                        <td>Signature: </td>\r\n                                        <td><input type=\"text\"  v-model=\"certificate.signature\" placeholder=\"neki tekst\"></input></td>\r\n                                    </tr>\r\n                                    <br/>\r\n                \t\t\t\t\t<tr>\r\n                \t\t\t\t\t\t<td colSpan=\"2\" text-align=\"center\"><input type=\"button\" @click=\"createCertificate\" value=\"neki tekst\"></input></td>\r\n                \t\t\t\t\t</tr>\r\n                </table>\r\n              </div>\r\n              <div style=\"margin-left: auto; margin-right:auto; width:30%;\" v-show=\"showAllCerts != 0\">\r\n                <table>\r\n                    <tr>\r\n                        <td>Insert password to access certificates: </td>\r\n                        <td><input type=\"text\"  v-model=\"password\" placeholder=\"Your password\"></input></td>\r\n                        <td colSpan=\"2\" text-align=\"center\"><input type=\"button\" @click=\"showAllCerts\" value=\"Confirm\"></input></td>\r\n                    </tr>\r\n                </table>\r\n              </div>\r\n         </div>\r\n        `\r\n    ,\r\n    methods:{\r\n        signOut : function(){\r\n            axios.get(\"/signOut\")\r\n                 .then(response=>{\r\n                    if(response.data == true){\r\n                        router.push(\"/\")\r\n                    }\r\n                    else{\r\n                        console.log(\"ne.\")\r\n                    }\r\n                 })\r\n        },\r\n        showCreateFun : function(){\r\n\r\n            this.showCreate = 1;\r\n            this.showAllCerts = 0;\r\n\r\n            axios.get(\"/getUsers\")\r\n                 .then(response => {this.users = response.data})\r\n\r\n        },\r\n\r\n        showAllCertsFun : function(){\r\n\r\n            this.showAllCerts = 1;\r\n            this.showCreate = 0;\r\n\r\n        },\r\n\r\n        createCertificate : function(){\r\n            axios.post(\"/createCertificate\", this.certificate)\r\n                 .then(response=>(console.log(response.data)))\r\n        },\r\n        createSSCert :function(){\r\n            axios.post(\"/createSSCertificate\")\r\n                 .then(response=>(console.log(response.data)))\r\n        },\r\n\r\n        showAllCerts : function(){\r\n\r\n            axios.get(\"/getAllCerts\")\r\n            .then(response=>(this.certificates = response.data))\r\n\r\n        }\r\n    },\r\n\r\n    mounted(){\r\n            axios.get(\"/getLoggedUser\", this.password)\r\n                 .then(response => {this.user = response.data});\r\n    }\r\n});\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/static/firstPage.js b/static/firstPage.js
--- a/static/firstPage.js	(revision c65835a1dcaf4cdd559dc54381f3addcc3dcb69c)
+++ b/static/firstPage.js	(date 1649354187853)
@@ -131,7 +131,7 @@
                     <tr>
                         <td>Insert password to access certificates: </td>
                         <td><input type="text"  v-model="password" placeholder="Your password"></input></td>
-                        <td colSpan="2" text-align="center"><input type="button" @click="showAllCerts" value="Confirm"></input></td>
+                        <td colSpan="2" text-align="center"><input type="button" @click="showAllCertsFunction" value="Confirm"></input></td>
                     </tr>
                 </table>
               </div>
@@ -176,10 +176,10 @@
                  .then(response=>(console.log(response.data)))
         },
 
-        showAllCerts : function(){
+        showAllCertsFunction : function(){
 
-            axios.get("/getAllCerts")
-            .then(response=>(this.certificates = response.data))
+            axios.post("/getAllCerts", this.password)
+                 .then(response=>(this.certificates = response.data))
 
         }
     },
Index: src/rest/SparkAppMain.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package rest;\r\n\r\nimport beans.Certificate;\r\nimport beans.User;\r\nimport beans.enums.UserType;\r\nimport com.google.gson.Gson;\r\nimport io.jsonwebtoken.SignatureAlgorithm;\r\nimport io.jsonwebtoken.security.Keys;\r\nimport service.CertificateService;\r\nimport service.UserService;\r\nimport spark.Session;\r\n\r\nimport java.io.File;\r\nimport java.security.Key;\r\nimport java.util.ArrayList;\r\n\r\nimport static spark.Spark.*;\r\nimport static spark.Spark.port;\r\nimport static spark.Spark.staticFiles;\r\n\r\npublic class SparkAppMain {\r\n\r\n\tprivate static Gson gson = new Gson();\r\n\r\n\t/**\r\n\t * Ključ za potpisivanje JWT tokena.\r\n\t * Biblioteka: https://github.com/jwtk/jjwt\r\n\t */\r\n\tstatic Key key = Keys.secretKeyFor(SignatureAlgorithm.HS256);\r\n\tprivate static UserService userService = new UserService();\r\n\tprivate static CertificateService certificateService = new CertificateService();\r\n\tpublic static void main(String[] args) throws Exception {\r\n\t\tport(8080);\r\n\r\n\t\t//webSocket(\"/ws\", WsHandler.class);\r\n\r\n\t\tstaticFiles.externalLocation(new File(\"./static\").getCanonicalPath());\r\n\r\n\r\n\t\tget(\"/getMessage\", (req, res)->{\r\n\t\t\tres.type(\"application/json\");\r\n\r\n\t\t\treturn \"Dunje Vrbaski\";\r\n\t\t});\r\n\r\n\t\tpost(\"/signIn\", (req, res)->{\r\n\t\t\tres.type(\"application/json\");\r\n\t\t\tUser user =  userService\r\n\t\t\t\t\t.findUserByEmail(((User) gson.fromJson(req.body(), User.class)).getEmail());\r\n\t\t\tif(user != null && user.getPassword().equals(((User) gson.fromJson(req.body(), User.class)).getPassword())) {\r\n\t\t\t\tSession session = req.session(true);\r\n\t\t\t\tsession.attribute(\"loggedUser\",user);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t});\r\n\r\n\t\tpost(\"/register\", (req, res)->{\r\n\t\t\tres.type(\"application/json\");\r\n\t\t\tboolean returnValue = false;\r\n\t\t\tif (userService.register((User) gson.fromJson(req.body(), User.class))) {\r\n\t\t\t\treturnValue = true;\r\n\r\n\t\t\t\tSession session = req.session(true);\r\n\t\t\t\tsession.attribute(\"loggedUser\", userService\r\n\t\t\t\t\t\t.findUserByEmail(((User) gson.fromJson(req.body(), User.class)).getEmail()));\r\n\t\t\t}\r\n\t\t\treturn returnValue;\r\n\t\t});\r\n\r\n\t\tpost(\"/createCertificate\", (req,res)->{\r\n\t\t\tres.type(\"application/json\");\r\n\t\t\treturn certificateService.createCertificate((Certificate) gson.fromJson(req.body(), Certificate.class));\r\n\t\t});\r\n\r\n\t\tget(\"/signOut\", (req, res) -> {\r\n\r\n\t\t\tSession session = req.session(true);\r\n\t\t\tUser user = session.attribute(\"loggedUser\");\r\n\r\n\t\t\tif (user != null) {\r\n\t\t\t\tsession.invalidate();\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t});\r\n\r\n\t\tget(\"/getLoggedUser\", (req, res) -> {\r\n\r\n\t\t\tres.type(\"application/json\");\r\n\t\t\tSession session = req.session(true);\r\n\t\t\tUser user = session.attribute(\"loggedUser\");\r\n\r\n\t\t\tif (user!=null) {\r\n\r\n\t\t\t\tUser userLogged = session.attribute(\"loggedUser\");\r\n\t\t\t\tArrayList<User> users = new ArrayList<User>();\r\n\t\t\t\tusers.add(userLogged);\r\n\t\t\t\treturn gson.toJson(userLogged);\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn \"EHE?! TE NANDAYO?!\";\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tget(\"/getUsers\", (req, res) -> {\r\n\t\t\tres.type(\"application/json\");\r\n\t\t\treturn gson.toJson(userService.getAllUsers());\r\n\t\t});\r\n\r\n\t\tpost(\"/createSSCertificate\", (req, res)->{\r\n\t\t\tres.type(\"application/json\");\r\n\t\t\tSession session = req.session(true);\r\n\t\t\tUser user = session.attribute(\"loggedUser\");\r\n\t\t\tif (user!=null) {\r\n\t\t\t\tcertificateService.createSSCertificate(user);\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t});\r\n\r\n\t\tget(\"/getAllCerts\", (req, res) -> {\r\n\t\t\tres.type(\"application/json\");\r\n\t\t\tString password = gson.fromJson(req.body(), String.class);\r\n\t\t\treturn gson.toJson(certificateService.getAllCerts(password));\r\n\t\t});\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/rest/SparkAppMain.java b/src/rest/SparkAppMain.java
--- a/src/rest/SparkAppMain.java	(revision c65835a1dcaf4cdd559dc54381f3addcc3dcb69c)
+++ b/src/rest/SparkAppMain.java	(date 1649354233063)
@@ -118,7 +118,7 @@
 			return true;
 		});
 
-		get("/getAllCerts", (req, res) -> {
+		post("/getAllCerts", (req, res) -> {
 			res.type("application/json");
 			String password = gson.fromJson(req.body(), String.class);
 			return gson.toJson(certificateService.getAllCerts(password));
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"236f4dc2-bb03-44b5-bbe0-b4e82e1f827e\" name=\"Changes\" comment=\"test\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/rest/SparkAppMain.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/rest/SparkAppMain.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/service/CertificateService.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/service/CertificateService.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/static/firstPage.js\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/static/firstPage.js\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"HTML File\" />\r\n        <option value=\"Enum\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"26v6SFPbBRaHEBKW6CC4O1eC0x2\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"DefaultHtmlFileTemplate\" value=\"HTML File\" />\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/../../../../Instaleri/jar_files (1)/bcprov-debug-jdk15on-1.61.jar\" />\r\n    <property name=\"project.structure.last.edited\" value=\"Project\" />\r\n    <property name=\"project.structure.proportion\" value=\"0.15\" />\r\n    <property name=\"project.structure.side.proportion\" value=\"0.2\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"reference.settingsdialog.project.gant\" />\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"SparkAppMain\" type=\"Application\" factoryName=\"Application\" nameIsGenerated=\"true\">\r\n      <option name=\"ALTERNATIVE_JRE_PATH\" value=\"corretto-1.8\" />\r\n      <option name=\"ALTERNATIVE_JRE_PATH_ENABLED\" value=\"true\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"rest.SparkAppMain\" />\r\n      <module name=\"SparkREST\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"rest.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"236f4dc2-bb03-44b5-bbe0-b4e82e1f827e\" name=\"Changes\" comment=\"\" />\r\n      <created>1648291713152</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1648291713152</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"test\">\r\n      <created>1648848560821</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1648848560821</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"test\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"test\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision c65835a1dcaf4cdd559dc54381f3addcc3dcb69c)
+++ b/.idea/workspace.xml	(date 1649354233160)
@@ -5,10 +5,9 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="236f4dc2-bb03-44b5-bbe0-b4e82e1f827e" name="Changes" comment="test">
-      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/proba" beforeDir="false" afterPath="$PROJECT_DIR$/proba" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/rest/SparkAppMain.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/rest/SparkAppMain.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/service/CertificateService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/service/CertificateService.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/static/firstPage.js" beforeDir="false" afterPath="$PROJECT_DIR$/static/firstPage.js" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -99,4 +98,25 @@
     <MESSAGE value="test" />
     <option name="LAST_COMMIT_MESSAGE" value="test" />
   </component>
+  <component name="XDebuggerManager">
+    <breakpoint-manager>
+      <breakpoints>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/service/CertificateService.java</url>
+          <line>79</line>
+          <option name="timeStamp" value="2" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/rest/SparkAppMain.java</url>
+          <line>121</line>
+          <option name="timeStamp" value="4" />
+        </line-breakpoint>
+      </breakpoints>
+    </breakpoint-manager>
+    <pin-to-top-manager>
+      <pinned-members>
+        <PinnedItemInfo parentTag="spark.http.matching.RequestWrapper" memberName="body" />
+      </pinned-members>
+    </pin-to-top-manager>
+  </component>
 </project>
\ No newline at end of file
